@model List<Library.Core.Models.BookMaster>
@{
    ViewBag.Title = "Books Management";
}


<div id="alerts-container"></div>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2><i class="fas fa-book"></i> Books Management</h2>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#bookModal" onclick="openAddBookModal()">
        <i class="fas fa-plus"></i> Add New Book
    </button>
</div>

<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Title</th>
                        <th>Author</th>
                        <th>ISBN</th>
                        <th>Category</th>
                        <th>Total Copies</th>
                        <th>Available</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var book in Model)
                        {
                            <tr>
                                <td>@book.Title</td>
                                <td>@book.Author</td>
                                <td>@book.ISBN</td>
                                <td>@book.Category</td>
                                <td>@book.TotalCopies</td>
                                <td>
                                    <span class="badge @(book.AvailableCopies > 0 ? "bg-success" : "bg-danger")">
                                        @book.AvailableCopies
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <button type="button" class="btn btn-outline-primary" onclick="editBook(@book.BookId)">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button type="button" class="btn btn-outline-danger" onclick="deleteBook(@book.BookId, '@book.Title')">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                        <a href="@Url.Action("BookHistory", "Reports", new { id = book.BookId })" class="btn btn-outline-info">
                                            <i class="fas fa-history"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center text-muted">No books found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Book Modal -->
<div class="modal fade" id="bookModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookModalTitle">Add New Book</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="bookForm" novalidate>
                <div class="modal-body">
                    <input type="hidden" id="BookId" name="BookId" value="0" />

                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <label for="Title" class="form-label">Title *</label>
                            <input type="text" class="form-control" id="Title" name="Title" required maxlength="255">
                            <div class="invalid-feedback"></div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="Author" class="form-label">Author *</label>
                            <input type="text" class="form-control" id="Author" name="Author" required maxlength="255">
                            <div class="invalid-feedback"></div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="ISBN" class="form-label">ISBN</label>
                            <input type="text" class="form-control" id="ISBN" name="ISBN" maxlength="20">
                            <div class="invalid-feedback"></div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="Category" class="form-label">Category</label>
                            <select class="form-select" id="Category" name="Category">
                                <option value="General">General</option>
                                <option value="Fiction">Fiction</option>
                                <option value="Non-Fiction">Non-Fiction</option>
                                <option value="Technology">Technology</option>
                                <option value="Science">Science</option>
                                <option value="Philosophy">Philosophy</option>
                                <option value="Psychology">Psychology</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="TotalCopies" class="form-label">Total Copies *</label>
                            <input type="number" class="form-control" id="TotalCopies" name="TotalCopies" required min="1" max="100">
                            <div class="invalid-feedback"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Save Book
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts {
    <script>
$(document).ready(function() {
    // Initialize form validation
    $('#bookForm').validate({
        rules: {
            Title: { required: true, maxlength: 255 },
            Author: { required: true, maxlength: 255 },
            ISBN: { maxlength: 20 },
            TotalCopies: { required: true, min: 1, max: 100 }
        },
        messages: {
            Title: { required: "Title is required", maxlength: "Title cannot exceed 255 characters" },
            Author: { required: "Author is required", maxlength: "Author cannot exceed 255 characters" },
            ISBN: { maxlength: "ISBN cannot exceed 20 characters" },
            TotalCopies: { required: "Total Copies is required", min: "Must be at least 1", max: "Cannot exceed 100" }
        },
        errorClass: "is-invalid",
        validClass: "is-valid",
        errorPlacement: function(error, element) {
            error.addClass("invalid-feedback");
            element.closest('.mb-3').find('.invalid-feedback').html(error.text());
        },
        highlight: function(element) {
            $(element).addClass("is-invalid").removeClass("is-valid");
        },
        unhighlight: function(element) {
            $(element).addClass("is-valid").removeClass("is-invalid");
        }
    });

    // Handle form submission
    $('#bookForm').on('submit', function(e) {
        e.preventDefault();

        if (!$(this).valid()) return;

        var formData = {
            BookId: $('#BookId').val(),
            Title: $('#Title').val(),
            Author: $('#Author').val(),
            ISBN: $('#ISBN').val(),
            Category: $('#Category').val(),
            TotalCopies: parseInt($('#TotalCopies').val())
        };

        var url = formData.BookId == 0 ? '@Url.Action("Create", "BookMaster")' : '@Url.Action("Edit", "BookMaster")';

        $.post(url, formData)
            .done(function(response) {
                if (response.success) {
                    $('#bookModal').modal('hide');
                    showAlert('success', response.message);
                    setTimeout(function() { location.reload(); }, 1500);
                } else {
                    showAlert('error', response.message);
                }
            })
            .fail(function() {
                showAlert('error', 'An error occurred while saving the book.');
            });
    });
});

function openAddBookModal() {
    $('#bookModalTitle').text('Add New Book');
    $('#bookForm')[0].reset();
    $('#BookId').val(0);
    $('.is-invalid').removeClass('is-invalid');
    $('.is-valid').removeClass('is-valid');
}

function editBook(bookId) {
    $.get('@Url.Action("GetBook", "BookMaster")', { id: bookId })
        .done(function(response) {
            if (response.success) {
                var book = response.data;
                $('#bookModalTitle').text('Edit Book');
                $('#BookId').val(book.BookId);
                $('#Title').val(book.Title);
                $('#Author').val(book.Author);
                $('#ISBN').val(book.ISBN);
                $('#Category').val(book.Category);
                $('#TotalCopies').val(book.TotalCopies);

                $('#bookModal').modal('show');
            } else {
                showAlert('error', response.message);
            }
        })
        .fail(function() {
            showAlert('error', 'Failed to load book details.');
        });
}

function deleteBook(bookId, title) {
    confirmDelete('Are you sure you want to delete "' + title + '"?', function() {
        $.post('@Url.Action("Delete", "BookMaster")', { id: bookId })
            .done(function(response) {
                if (response.success) {
                    showAlert('success', response.message);
                    setTimeout(function() { location.reload(); }, 1500);
                } else {
                    showAlert('error', response.message);
                }
            })
            .fail(function() {
                showAlert('error', 'An error occurred while deleting the book.');
            });
    });
}
    </script>
}