@model List<Library.Core.Models.BookIssue>
@{
    ViewBag.Title = "Overdue Members Report";
}
<div id="alerts-container"></div>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2><i class="fas fa-exclamation-triangle text-warning"></i> Overdue Members Report</h2>
    <button onclick="window.print()" class="btn btn-outline-primary">
        <i class="fas fa-print"></i> Print Report
    </button>
</div>

<div class="card">
    <div class="card-body">
        @if (Model != null && Model.Any())
        {
            <div class="alert alert-warning">
                <i class="fas fa-info-circle"></i>
                <strong>Total Overdue Books:</strong> @Model.Count |
                <strong>Total Fine Amount:</strong> ₹@Model.Where(m => m.FineAmount.HasValue).Sum(m => m.FineAmount.Value)
            </div>

            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Member Details</th>
                            <th>Book Details</th>
                            <th>Issue Date</th>
                            <th>Due Date</th>
                            <th>Days Overdue</th>
                            <th>Fine Amount</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var issue in Model)
                        {
                            var overdueDays = (DateTime.Now - issue.DueDate).Days;
                            var calculatedFine = overdueDays * 10;

                            <tr>
                                <td>
                                    <strong>@issue.MemberName</strong><br>
                                    <small class="text-muted">@issue.MemberMobile</small>
                                </td>
                                <td>
                                    <strong>@issue.BookTitle</strong><br>
                                    <small class="text-muted">by @issue.BookAuthor</small>
                                </td>
                                <td>@issue.IssueDate.ToString("dd/MM/yyyy")</td>
                                <td>@issue.DueDate.ToString("dd/MM/yyyy")</td>
                                <td>
                                    <span class="badge bg-danger">@overdueDays days</span>
                                </td>
                                <td>
                                    <strong class="text-danger">₹@calculatedFine</strong>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-success" onclick="returnBook(@issue.IssueId, '@issue.BookTitle', @overdueDays)">
                                        <i class="fas fa-undo"></i> Return
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-success text-center">
                <i class="fas fa-check-circle fa-3x mb-3"></i>
                <h4>No Overdue Books!</h4>
                <p>All books are returned on time or within the due date.</p>
            </div>
        }
    </div>
</div>

@section scripts {
    <script>
function returnBook(issueId, bookTitle, overdueDays) {
    var fine = overdueDays * 10;
    var message = 'Return "' + bookTitle + '"?\n\nOverdue: ' + overdueDays + ' days\nFine: ₹' + fine;

    confirmDelete(message, function() {
        $.post('@Url.Action("ReturnBook", "BookIssue")', { issueId: issueId })
            .done(function(response) {
                if (response.success) {
                    showAlert('success', response.message);
                    setTimeout(function() { location.reload(); }, 1500);
                } else {
                    showAlert('error', response.message);
                }
            })
            .fail(function() {
                showAlert('error', 'An error occurred while returning the book.');
            });
    });
}
    </script>
}

